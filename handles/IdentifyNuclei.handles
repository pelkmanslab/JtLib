hdf5_filename: None

# Identify nuclei
# ===============

# The module identifies 'nuclei' objects by intensity thresholding and 
# subsequent separation of clumped objects along watershed lines.
# 
# Clumped objects are selected based on area/shape features.
# The selected clumped objects are then subjected to perimeter analysis in order
# to identify concave regions. Then watershed lines, which connect two concave 
# regions with each other, are identified the optimal separation line is chosen
# for each clump.
#
# Authors:
#  Markus Herrmann (PerimeterWatershedSegmentation.m and Jterator module implementation)
#  Nicolas Battich (CP module SeparatePrimary.m)
#  Anatol Schwab (PerimeterAnaylsis.m)

input:

  - name: DapiImage
    class: hdf5_location
    value: 
    type: double
    help: 'Intensity image that should be used for nuclei identification.'

  # Preprocessing: smooth intensity image by median filtering
  # ---------------------------------------------------------

  - name: doSmooth
    class: parameter
    value: No
    help: 'Do you want to smooth the intensity image before identifying cells?'

  - name: SmoothingFilterSize
    class: parameter
    value: 3
    help: 'Size of the median smoothing filter.'


  # Identify objects by intensity thresholding
  # ------------------------------------------

  - name: ThresholdCorrection
    class: parameter
    value: 1
    help: 'Threshold correction factor to adjust thresholding.'

  - name: MinimumThreshold
    class: parameter
    value: 120
    help: 'Minimal allowed threshold value that can prevent recognition of background as objects.'



  # Separate (cut) clumped objects based on perimeter/watershed analysis
  # --------------------------------------------------------------------

  - name: CuttingPasses
    class: parameter
    value: 2
    help: 'Number of cutting passes (iterations) to break down clumped objects.'

  - name: MaxSolidity
    class: parameter
    value: 0.91
    help: 'Object selection: maximal solidity for an object to be selected for cutting.'

  - name: MinFormFactor
    class: parameter
    value: 0.45
    help: 'Object selection: minimal form factor for an object to be selected for cutting.'

  - name: MaxArea
    class: parameter
    value: 50000
    help: 'Object selection: maximal area for an object to be selected for cutting.'

  - name: MinArea
    class: parameter
    value: 7000
    help: 'Object selection: minimal area for an object to be selected for cutting.'

  - name: MinCutArea
    class: parameter
    value: 2500
    help: 'Minimal area a potentially cut object must have. Prevents cutting off small fragments.'

  - name: SlidingWindow
    class: parameter
    value: 8
    help: 'Perimeter analysis: sliding window size for detection of concave regions.'

  - name: FilterSize
    class: parameter
    value: 1
    help: 'Perimeter analysis: size of the smoothing filter applied to objects before perimeter analysis.'

  - name: MaxConcaveRadius
    class: parameter
    value: 30
    help: 'Perimeter analysis: maximum equivalent radius for a region to be considered concave.'

  - name: CircularSegment
    class: parameter
    value: 6
    help: 'Perimeter analysis: equivalent circular segment for a region to be considered concave.'


  # Plot results
  # ------------

  - name: doPlot
    class: parameter
    value: Yes
    help: 'Do you want to plot the results?'

  # doTestModePerimeter:
  #   parameter: No

  # doTestModeShape:
  #   parameter: No


  # Store results
  # -------------

  - name: doSaveSegmentedImage
    class: parameter
    value: Yes
    help: 'Do you want to save segmented nuclei as mask images?'

  - name: SegmentationPath
    class: parameter
    value: 
    help: 'Relative path to the folder were these mask images should be saved.'

  - name: OrigImageFilename
    class: hdf5_location
    value: 
    help: 'Name of the intensity image file.'

output:

  - name: Nuclei
    class: hdf5_location
    value: 
